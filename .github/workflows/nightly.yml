name: Nightly Build

on:
  push:
    branches: [master]
  schedule:
    - cron: '0 5 * * *' # run at 5 AM UTC

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install \
            imagemagick p7zip-full \
            npm
          sudo npm install -g markdown-pdf

      - name: Install dotnet sdk
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: master

      - name: Compile
        run: zig build install

      - name: Testsuite
        run: zig build test

      - name: Generate Test files
        run: zig build generate

      - name: Compile x86_64-windows release
        run: |
          zig build -Drelease -Dtarget=x86_64-windows --prefix release/x86_64-windows

      - name: Compile x86_64-linux release
        run: |
          zig build -Drelease -Dtarget=x86_64-linux --prefix release/x86_64-linux

      - name: Compile x86_64-macos release
        run: |
          zig build -Drelease -Dtarget=x86_64-macos --prefix release/x86_64-macos

      - name: Compile aarch64-linux release
        run: |
          zig build -Drelease -Dtarget=aarch64-linux --prefix release/aarch64-linux

      - name: Compile aarch64-macos release
        run: |
          zig build -Drelease -Dtarget=aarch64-macos --prefix release/aarch64-macos

      - name: Compile dotnet tooling
        run: |
          make -C src/tools/svg2tvg/ publish

      - name: Compile polyfill
        run: zig build install -Drelease -Dpolyfill -Dweb-example

      - name: Compile and bundle SDK
        run: |
          ./build-sdk.sh

      - name: Render Specification
        run: |
          mkdir -p dist
          ./build-spec.sh website/download/specification.pdf
          cp documents/specification.md website/download/specification.md

      - name: Pack Downloads Bundles
        run: |
          mkdir -p dist

          pushd release/x86_64-windows/bin
          7z a ../../../website/download/tvg-x86_64-windows.zip *
          popd

          pushd release/x86_64-linux/bin
          7z a ../../../website/download/tvg-x86_64-linux.zip *
          popd

          pushd release/x86_64-macos/bin
          7z a ../../../website/download/tvg-x86_64-macos.zip *
          popd

          pushd release/aarch64-linux/bin
          7z a ../../../website/download/tvg-aarch64-linux.zip *
          popd

          pushd release/aarch64-macos/bin
          7z a ../../../website/download/tvg-aarch64-macos.zip *
          popd

          pushd zig-out/www/
          7z a ../../website/download/tvg-polyfill.zip *
          popd

          pushd sdk-release/
          7z a ../website/download/tinyvg-sdk.zip *
          popd

      - name: Compile SDK file listing
        run: |
          cd website/download
          unzip -l tinyvg-sdk.zip > tinyvg-sdk.txt

      - name: Provide polyfill demo
        run: |
          cp -r zig-out/www website/polyfill

      - name: Copy some files around
        run: |
          cp -r design/social-media-preview.png website/img/social-media-preview.png

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@v2.1.1
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          ARGS: '-rltgoDzvO --delete'
          SOURCE: 'website/'
          REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
          REMOTE_USER: ${{ secrets.DEPLOY_USERNAME }}
          TARGET: '/home/${{ secrets.DEPLOY_USERNAME }}/tinyvg'

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: master

      - name: Compile
        run: zig build install -Dweb-example=false

      - name: Testsuite
        run: zig build test

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v1
        with:
          version: master

      - name: Compile
        run: zig build install -Dweb-example=false

      - name: Testsuite
        run: zig build test
